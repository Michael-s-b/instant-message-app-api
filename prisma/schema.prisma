// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URI")
}

model User {
  id                 Int         @id @default(autoincrement())
  email              String      @unique
  username           String      @unique
  passwordHash       String?
  googleId           String?     @unique
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  chats              User_Chat[]
  messages           Message[]
  Profile            Profile?
  createdContacts    Contact[]   @relation("createdContacts") // contacts created by this user
  referencedContacts Contact[]   @relation("referencedContacts") // contacts referencing this user
}

model Chat {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  type      ChatType    @default(DIRECT)
  users     User_Chat[]
  messages  Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  edited    Boolean  @default(false)
  deleted   Boolean  @default(false)
}

model User_Chat {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int

  @@id([userId, chatId])
  @@unique([userId, chatId])
}

model Profile {
  id        Int      @id @default(autoincrement())
  name      String?  @default("New User")
  bio       String?  @default("Hello World!")
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [username], references: [username])
  username  String   @unique
}

model Contact {
  id               Int      @id @default(autoincrement())
  name             String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation("createdContacts", fields: [createdByUserId], references: [id]) // user who created this contact
  createdByUserId  Int
  contact          User     @relation("referencedContacts", fields: [referencedUserId], references: [id]) // user who is referenced by this contact
  referencedUserId Int

  @@unique([createdByUserId, referencedUserId])
}

enum ChatType {
  DIRECT
  GROUP
}
